<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head>
<meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Henix."></meta>
<meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Java, University of Victoria"></meta>


<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
Selenium Quiz
</title>

<!-- Made with executable version Java Hot Potatoes 6.1.0.5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version Java Hot Potatoes 6.1.0.5 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
	background-color: #ffffff;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #000000;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #000033;
}

button{
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000033;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000033;
}

div.StdDiv{
	background-color: #bbbbee;
	text-align: center;
	font-size: 100%;
	color: #000000;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Lucida Grande, Arial Unicode MS, Sans Serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Lucida Grande, Arial Unicode MS, Sans Serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Lucida Grande, Arial Unicode MS, Sans Serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000033;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000033;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #000033;
}

.LeftItem{
	font-size: 100%;
	color: #000000;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000000;
}

span.CorrectMark{

}

input, textarea{
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #ffffff;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000033;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000000;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000000;
	border-color: #000000;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #bbbbee;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #bbbbee;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #000033;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #000033;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #ddddf6;
	border-top-color: #ddddf6;
	border-right-color: #5d5d77;
	border-bottom-color: #5d5d77;
	color: #000000;
	background-color: #bbbbee;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #bbbbee;
	text-align: center;
	border-style: solid;

	border-left-color: #ddddf6;
	border-top-color: #ddddf6;
	border-right-color: #5d5d77;
	border-bottom-color: #5d5d77;

	background-color: #000000;
	color: #bbbbee;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #bbbbee;
	text-align: center;
	border-style: solid;

	border-left-color: #5d5d77;
	border-top-color: #5d5d77;
	border-right-color: #ddddf6;
	border-bottom-color: #ddddf6;
	background-color: #000000;
	color: #bbbbee;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #000066;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #7f7fb2;
	border-top-color: #7f7fb2;
	border-right-color: #000033;
	border-bottom-color: #000033;
	background-color: #000066;
	color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #7f7fb2;
	border-top-color: #7f7fb2;
	border-right-color: #000033;
	border-bottom-color: #000033;
	color: #000066;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #000033;
	border-top-color: #000033;
	border-right-color: #7f7fb2;
	border-bottom-color: #7f7fb2;
	color: #000066;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #0000ff;
}

a:visited{
	color: #0000cc;
}

a:hover{
	color: #0000ff;
}

div.CardStyle {
	position: absolute;
	font-family: Lucida Grande, Arial Unicode MS, Sans Serif;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #bbbbee;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script type="text/javascript">

//<![CDATA[

<!--




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
		//alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JQUIZ CORE JAVASCRIPT CODE

var CurrQNum = 0;
var CorrectIndicator = ':-)';
var IncorrectIndicator = 'X';
var YourScoreIs = 'Your score is:';

//New for 6.2.2.0
var CompletedSoFar = 'Completed so far:';
var ExerciseCompleted = 'You have completed the exercise.';
var ShowCompletedSoFar = true;

var ContinuousScoring = true;
var CorrectFirstTime = 'Include score of questions answered correctly first time.';
var ShowCorrectFirstTime = false;
var ShuffleQs = false;
var ShuffleAs = false;
var DefaultRight = 'Correct!';
var DefaultWrong = 'Not perfect yet. Incorrect matches have been removed.';
var QsToShow = 87;
var Score = 0;
var Finished = false;
var Qs = null;
var QArray = new Array();
var ShowingAllQuestions = false;
var ShowAllQuestionsCaption = 'Show all questions';
var ShowOneByOneCaption = 'Show questions one by one';
var State = new Array();
var Feedback = '';
var TimeOver = false;
var strInstructions = '';
var Locked = false;

//The following variable can be used to add a message explaining that
//the question is finished, so no further marking will take place.
var strQuestionFinished = '';

function CompleteEmptyFeedback(){
	var QNum, ANum;
	for (QNum=0; QNum<I.length; QNum++){
//Only do this if not multi-select
		if (I[QNum][2] != '3'){
  		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
  			if (I[QNum][3][ANum][1].length < 1){
  				if (I[QNum][3][ANum][2] > 0){
  					I[QNum][3][ANum][1] = DefaultRight;
  				}
  				else{
  					I[QNum][3][ANum][1] = DefaultWrong;
  				}
  			}
  		}
		}
	}
}

function SetUpQuestions(){
	var AList = new Array(); 
	var QList = new Array();
	var i, j;
	Qs = document.getElementById('Questions');
	while (Qs.getElementsByTagName('li').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
	}
	var DumpItem = 0;
	if (QsToShow > QList.length){
		QsToShow = QList.length;
	}
	while (QsToShow < QList.length){
		DumpItem = Math.floor(QList.length*Math.random());
		for (j=DumpItem; j<(QList.length-1); j++){
			QList[j] = QList[j+1];
		}
		QList.length = QList.length-1;
	}
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}
	if (ShuffleAs == true){
		var As;
		for (var i=0; i<QList.length; i++){
			As = QList[i].getElementsByTagName('ol')[0];
			if (As != null){
  			AList.length = 0;
				while (As.getElementsByTagName('li').length > 0){
					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
				}
				AList = Shuffle(AList);
				for (j=0; j<AList.length; j++){
					As.appendChild(AList[j]);
				}
			}
		}
	}
	
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
		QArray[QArray.length] = QList[i];
	}

//Show the first item
	QArray[0].style.display = '';
	
//Now hide all except the first item
	for (i=1; i<QArray.length; i++){
		QArray[i].style.display = 'none';
	}		
	SetQNumReadout();
	
	SetFocusToTextbox();
}

function SetFocusToTextbox(){
//if there's a textbox, set the focus in it
	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
//and show a keypad if there is one
		if (document.getElementById('CharacterKeypad') != null){
			document.getElementById('CharacterKeypad').style.display = 'block';
		}
	}
	else{
  	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
  		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();	
//and show a keypad if there is one
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'block';
			}
		}
//This added for 6.0.4.11: hide accented character buttons if no textbox
		else{
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'none';
			}
		}
	}
}

function ChangeQ(ChangeBy){
//The following line prevents moving to another question until the current
//question is answered correctly. Uncomment it to enable this behaviour. 
//	if (State[CurrQNum][0] == -1){return;}
	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
	QArray[CurrQNum].style.display = 'none';
	CurrQNum += ChangeBy;
	QArray[CurrQNum].style.display = '';
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
	SetQNumReadout();
	SetFocusToTextbox();
}

var HiddenReadingShown = false;
function ShowSpecialReadingForQuestion(){
//Undocumented function for showing specific reading text elements which change with each question
//Added on 10/12/2004
	if (document.getElementById('ReadingDiv') != null){
		if (HiddenReadingShown == true){
			document.getElementById('ReadingDiv').innerHTML = '';
		}
		if (QArray[CurrQNum] != null){
//Fix for 6.0.4.25
			var Children = QArray[CurrQNum].getElementsByTagName('div');
			for (var i=0; i<Children.length; i++){
			if (Children[i].className=="HiddenReading"){
					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
					HiddenReadingShown = true;
//Hide the ShowAllQuestions button to avoid confusion
					if (document.getElementById('ShowMethodButton') != null){
						document.getElementById('ShowMethodButton').style.display = 'none';
					}
				}
			}	
		}
	}
}

function SetQNumReadout(){
	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
	if ((CurrQNum+1) >= QArray.length){
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'visible';
		}
	}
	if (CurrQNum <= 0){
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'visible';
		}
	}
}

var I=new Array();
I[0] = new Array();
I[0][0] = 100;
I[0][1] = '';
I[0][2] = '0';
I[0][3] = new Array();
I[0][3][0] = new Array('xml','',0,0,1);
I[0][3][1] = new Array('none of these','',1,100,1);
I[0][3][2] = new Array('txt','',0,0,1);
I[0][3][3] = new Array('html','',0,0,1);
I[1] = new Array();
I[1][0] = 100;
I[1][1] = '';
I[1][2] = '0';
I[1][3] = new Array();
I[1][3][0] = new Array('wait','',0,0,1);
I[1][3][1] = new Array('stop','',0,0,1);
I[1][3][2] = new Array('none of these','',1,100,1);
I[1][3][3] = new Array('halt','',0,0,1);
I[2] = new Array();
I[2][0] = 100;
I[2][1] = '';
I[2][2] = '0';
I[2][3] = new Array();
I[2][3][0] = new Array('assertFoo','',0,0,1);
I[2][3][1] = new Array('all of these','',1,100,1);
I[2][3][2] = new Array('verifyFoo','',0,0,1);
I[2][3][3] = new Array('waitForFoo','',0,0,1);
I[3] = new Array();
I[3][0] = 100;
I[3][1] = '';
I[3][2] = '0';
I[3][3] = new Array();
I[3][3][0] = new Array('value of 30','',1,100,1);
I[3][3][1] = new Array('not defined','',0,0,1);
I[3][3][2] = new Array('value of 10','',0,0,1);
I[3][3][3] = new Array('value of 0','',1,100,1);
I[4] = new Array();
I[4][0] = 100;
I[4][1] = '';
I[4][2] = '0';
I[4][3] = new Array();
I[4][3][0] = new Array('integration testing','',0,0,1);
I[4][3][1] = new Array('static testing','',0,0,1);
I[4][3][2] = new Array('regression testing','',1,100,1);
I[4][3][3] = new Array('API testing','',0,0,1);
I[5] = new Array();
I[5][0] = 100;
I[5][1] = '';
I[5][2] = '0';
I[5][3] = new Array();
I[5][3][0] = new Array('value of 0','',0,0,1);
I[5][3][1] = new Array('null','',1,100,1);
I[5][3][2] = new Array('exception is raised','',0,0,1);
I[5][3][3] = new Array('value of -1','',0,0,1);
I[6] = new Array();
I[6][0] = 100;
I[6][1] = '';
I[6][2] = '0';
I[6][3] = new Array();
I[6][3][0] = new Array('ADO objects','',0,0,1);
I[6][3][1] = new Array('DAO objects','',0,0,1);
I[6][3][2] = new Array('All of these','',1,100,1);
I[6][3][3] = new Array('Data pool','',0,0,1);
I[7] = new Array();
I[7][0] = 100;
I[7][1] = '';
I[7][2] = '0';
I[7][3] = new Array();
I[7][3][0] = new Array('EventListener','',0,0,1);
I[7][3][1] = new Array('EventFiring','',0,0,1);
I[7][3][2] = new Array('WebDriver','',1,100,1);
I[7][3][3] = new Array('None of these','',0,0,1);
I[8] = new Array();
I[8][0] = 100;
I[8][1] = '';
I[8][2] = '0';
I[8][3] = new Array();
I[8][3][0] = new Array('char','',0,0,1);
I[8][3][1] = new Array('float','',0,0,1);
I[8][3][2] = new Array('string','',1,100,1);
I[8][3][3] = new Array('bool','',0,0,1);
I[9] = new Array();
I[9][0] = 100;
I[9][1] = '';
I[9][2] = '0';
I[9][3] = new Array();
I[9][3][0] = new Array('WebDriver','',0,0,1);
I[9][3][1] = new Array('plugin','',0,0,1);
I[9][3][2] = new Array('General','',1,100,1);
I[9][3][3] = new Array('Formats','',0,0,1);
I[10] = new Array();
I[10][0] = 100;
I[10][1] = '';
I[10][2] = '0';
I[10][3] = new Array();
I[10][3][0] = new Array('AppCache','',0,0,1);
I[10][3][1] = new Array('Canvas','',0,0,1);
I[10][3][2] = new Array('WebSockets','',0,0,1);
I[10][3][3] = new Array('IndexedDB','',1,100,1);
I[11] = new Array();
I[11][0] = 100;
I[11][1] = '';
I[11][2] = '0';
I[11][3] = new Array();
I[11][3][0] = new Array('None of these','',1,100,1);
I[11][3][1] = new Array('Selenium Grid','',0,0,1);
I[11][3][2] = new Array('Selenium 2','',0,0,1);
I[11][3][3] = new Array('Selenium 3','',1,100,1);
I[12] = new Array();
I[12][0] = 100;
I[12][1] = '';
I[12][2] = '0';
I[12][3] = new Array();
I[12][3][0] = new Array('get','',1,100,1);
I[12][3][1] = new Array('httpget','',0,0,1);
I[12][3][2] = new Array('fetch','',0,0,1);
I[12][3][3] = new Array('obtain','',0,0,1);
I[13] = new Array();
I[13][0] = 100;
I[13][1] = '';
I[13][2] = '0';
I[13][3] = new Array();
I[13][3][0] = new Array('Selenium NG','',0,0,1);
I[13][3][1] = new Array('Selenium WebDriver','',0,0,1);
I[13][3][2] = new Array('Selenium RC','',0,0,1);
I[13][3][3] = new Array('Selenium Grid','',1,100,1);
I[14] = new Array();
I[14][0] = 100;
I[14][1] = '';
I[14][2] = '0';
I[14][3] = new Array();
I[14][3][0] = new Array('PATH','',0,0,1);
I[14][3][1] = new Array('HOME','',0,0,1);
I[14][3][2] = new Array('JAVA_HOME','',1,100,1);
I[14][3][3] = new Array('JAVA_PATH','',0,0,1);
I[15] = new Array();
I[15][0] = 100;
I[15][1] = '';
I[15][2] = '0';
I[15][3] = new Array();
I[15][3][0] = new Array('Excel files','',0,0,1);
I[15][3][1] = new Array('CVS files','',0,0,1);
I[15][3][2] = new Array('All of these','',1,100,1);
I[15][3][3] = new Array('ODBC source','',0,0,1);
I[16] = new Array();
I[16][0] = 100;
I[16][1] = '';
I[16][2] = '0';
I[16][3] = new Array();
I[16][3][0] = new Array('undefined behavior','',1,100,1);
I[16][3][1] = new Array('exception is raised','',0,0,1);
I[16][3][2] = new Array('depends upon AUT','',0,0,1);
I[16][3][3] = new Array('No error or issue','',0,0,1);
I[17] = new Array();
I[17][0] = 100;
I[17][1] = '';
I[17][2] = '0';
I[17][3] = new Array();
I[17][3][0] = new Array('IndexedDB','',0,0,1);
I[17][3][1] = new Array('AppCache','',0,0,1);
I[17][3][2] = new Array('Canvas','',1,100,1);
I[17][3][3] = new Array('WebSockets','',0,0,1);
I[18] = new Array();
I[18][0] = 100;
I[18][1] = '';
I[18][2] = '0';
I[18][3] = new Array();
I[18][3][0] = new Array('4444','',1,100,1);
I[18][3][1] = new Array('8000','',0,0,1);
I[18][3][2] = new Array('8080','',0,0,1);
I[18][3][3] = new Array('80','',0,0,1);
I[19] = new Array();
I[19][0] = 100;
I[19][1] = '';
I[19][2] = '0';
I[19][3] = new Array();
I[19][3][0] = new Array('None of these','',0,0,1);
I[19][3][1] = new Array('getCookieNamed','',1,100,1);
I[19][3][2] = new Array('getCookie','',0,0,1);
I[19][3][3] = new Array('getCookies','',0,0,1);
I[20] = new Array();
I[20][0] = 100;
I[20][1] = '';
I[20][2] = '0';
I[20][3] = new Array();
I[20][3][0] = new Array('version 7','',0,0,1);
I[20][3][1] = new Array('version 5','',0,0,1);
I[20][3][2] = new Array('version 6','',0,0,1);
I[20][3][3] = new Array('version 8','',1,100,1);
I[21] = new Array();
I[21][0] = 100;
I[21][1] = '';
I[21][2] = '0';
I[21][3] = new Array();
I[21][3][0] = new Array('at least one element has been found','',0,0,1);
I[21][3][1] = new Array('at least one element has been found or timeout has expired','',0,0,1);
I[21][3][2] = new Array('depends upon AUT','',0,0,1);
I[21][3][3] = new Array('timeout has expired','',1,100,1);
I[22] = new Array();
I[22][0] = 100;
I[22][1] = '';
I[22][2] = '0';
I[22][3] = new Array();
I[22][3][0] = new Array('Mac OS','',0,0,1);
I[22][3][1] = new Array('Linux','',0,0,1);
I[22][3][2] = new Array('All of these','',1,100,1);
I[22][3][3] = new Array('Windows','',0,0,1);
I[23] = new Array();
I[23][0] = 100;
I[23][1] = '';
I[23][2] = '0';
I[23][3] = new Array();
I[23][3][0] = new Array('None of these','',0,0,1);
I[23][3][1] = new Array('bool','',0,0,1);
I[23][3][2] = new Array('char','',0,0,1);
I[23][3][3] = new Array('String','',1,100,1);
I[24] = new Array();
I[24][0] = 100;
I[24][1] = '';
I[24][2] = '0';
I[24][3] = new Array();
I[24][3][0] = new Array('Browser specific control mechanism','',0,0,1);
I[24][3][1] = new Array('All of these','',1,100,1);
I[24][3][2] = new Array('object oriented API','',0,0,1);
I[24][3][3] = new Array('HTMLUnit support','',0,0,1);
I[25] = new Array();
I[25][0] = 100;
I[25][1] = '';
I[25][2] = '0';
I[25][3] = new Array();
I[25][3][0] = new Array('#d2 #part1','',0,0,1);
I[25][3][1] = new Array('#d2>#part1','',1,100,1);
I[25][3][2] = new Array('#d2<#part1','',0,0,1);
I[25][3][3] = new Array('#d2.#part1','',0,0,1);
I[26] = new Array();
I[26][0] = 100;
I[26][1] = '';
I[26][2] = '0';
I[26][3] = new Array();
I[26][3][0] = new Array('String','',0,0,1);
I[26][3][1] = new Array('boolean','',0,0,1);
I[26][3][2] = new Array('char','',0,0,1);
I[26][3][3] = new Array('none of these','',1,100,1);
I[27] = new Array();
I[27][0] = 100;
I[27][1] = '';
I[27][2] = '0';
I[27][3] = new Array();
I[27][3][0] = new Array('Chrome','',0,0,1);
I[27][3][1] = new Array('None of these','',1,100,1);
I[27][3][2] = new Array('Firefox','',0,0,1);
I[27][3][3] = new Array('Safari','',0,0,1);
I[28] = new Array();
I[28][0] = 100;
I[28][1] = '';
I[28][2] = '0';
I[28][3] = new Array();
I[28][3][0] = new Array('integration test','',0,0,1);
I[28][3][1] = new Array('unit test','',0,0,1);
I[28][3][2] = new Array('All of these','',1,100,1);
I[28][3][3] = new Array('functional test','',0,0,1);
I[29] = new Array();
I[29][0] = 100;
I[29][1] = '';
I[29][2] = '0';
I[29][3] = new Array();
I[29][3][0] = new Array('input[ends-with(@id,\'userName\')]','',1,100,1);
I[29][3][1] = new Array('input[end-with(@id,\'userName\')]','',0,0,1);
I[29][3][2] = new Array('input[end-with(@id,userName)]','',0,0,1);
I[29][3][3] = new Array('input[ends-with(@id,userName)]','',0,0,1);
I[30] = new Array();
I[30][0] = 100;
I[30][1] = '';
I[30][2] = '0';
I[30][3] = new Array();
I[30][3][0] = new Array('action','',0,0,1);
I[30][3][1] = new Array('none of these','',1,100,1);
I[30][3][2] = new Array('add','',0,0,1);
I[30][3][3] = new Array('method','',0,0,1);
I[31] = new Array();
I[31][0] = 100;
I[31][1] = '';
I[31][2] = '0';
I[31][3] = new Array();
I[31][3][0] = new Array('Silverlight based application','',0,0,1);
I[31][3][1] = new Array('Flash based application','',0,0,1);
I[31][3][2] = new Array('DOM based application','',1,100,1);
I[31][3][3] = new Array('None of these','',0,0,1);
I[32] = new Array();
I[32][0] = 100;
I[32][1] = '';
I[32][2] = '0';
I[32][3] = new Array();
I[32][3][0] = new Array('Both DesiredCapabilities and change in phantomjs dependency','',1,100,1);
I[32][3][1] = new Array('Silverlight based application','',0,0,1);
I[32][3][2] = new Array('DesiredCapabilities','',0,0,1);
I[32][3][3] = new Array('System.setProperty','',0,0,1);
I[33] = new Array();
I[33][0] = 100;
I[33][1] = '';
I[33][2] = '0';
I[33][3] = new Array();
I[33][3][0] = new Array('None of these','',1,100,1);
I[33][3][1] = new Array('3','',0,0,1);
I[33][3][2] = new Array('1','',0,0,1);
I[33][3][3] = new Array('2','',0,0,1);
I[34] = new Array();
I[34][0] = 100;
I[34][1] = '';
I[34][2] = '0';
I[34][3] = new Array();
I[34][3][0] = new Array('All of these','',1,100,1);
I[34][3][1] = new Array('Locator type of element','',0,0,1);
I[34][3][2] = new Array('Name of the element','',0,0,1);
I[34][3][3] = new Array('Value of the locator','',0,0,1);
I[35] = new Array();
I[35][0] = 100;
I[35][1] = '';
I[35][2] = '0';
I[35][3] = new Array();
I[35][3][0] = new Array('boolean','',0,0,1);
I[35][3][1] = new Array('None of these','',1,100,1);
I[35][3][2] = new Array('String','',0,0,1);
I[35][3][3] = new Array('char','',0,0,1);
I[36] = new Array();
I[36][0] = 100;
I[36][1] = '';
I[36][2] = '0';
I[36][3] = new Array();
I[36][3][0] = new Array('driver().navigate().to(siteurl); driver().manage().timeouts().implicitlyWait(30, SECONDS);','',0,0,1);
I[36][3][1] = new Array('Validity depends upon AUT','',0,0,1);
I[36][3][2] = new Array('Both code listings are valid','',1,100,1);
I[36][3][3] = new Array('driver().manage().timeouts().implicitlyWait(30, SECONDS); driver().navigate().to(siteurl);','',0,0,1);
I[37] = new Array();
I[37][0] = 100;
I[37][1] = '';
I[37][2] = '0';
I[37][3] = new Array();
I[37][3][0] = new Array('none of these','',1,100,1);
I[37][3][1] = new Array('following','',0,0,1);
I[37][3][2] = new Array('sibling','',0,0,1);
I[37][3][3] = new Array('descendant','',0,0,1);
I[38] = new Array();
I[38][0] = 100;
I[38][1] = '';
I[38][2] = '0';
I[38][3] = new Array();
I[38][3][0] = new Array('Depends upon the AUT','',0,0,1);
I[38][3][1] = new Array('Depends upon AUT','',0,0,1);
I[38][3][2] = new Array('Client','',1,100,1);
I[38][3][3] = new Array('Server','',0,0,1);
I[39] = new Array();
I[39][0] = 100;
I[39][1] = '';
I[39][2] = '0';
I[39][3] = new Array();
I[39][3][0] = new Array('release','',1,100,1);
I[39][3][1] = new Array('sendKeys','',0,0,1);
I[39][3][2] = new Array('KeyUp','',0,0,1);
I[39][3][3] = new Array('KeyDown','',0,0,1);
I[40] = new Array();
I[40][0] = 100;
I[40][1] = '';
I[40][2] = '0';
I[40][3] = new Array();
I[40][3][0] = new Array('* * * 8 0','',0,0,1);
I[40][3][1] = new Array('8 0 * * *','',0,0,1);
I[40][3][2] = new Array('* * * 0 8','',0,0,1);
I[40][3][3] = new Array('0 8 * * *','',1,100,1);
I[41] = new Array();
I[41][0] = 100;
I[41][1] = '';
I[41][2] = '0';
I[41][3] = new Array();
I[41][3][0] = new Array('bookmarks','',0,0,1);
I[41][3][1] = new Array('all of these','',1,100,1);
I[41][3][2] = new Array('passwords','',0,0,1);
I[41][3][3] = new Array('user preferences','',0,0,1);
I[42] = new Array();
I[42][0] = 100;
I[42][1] = '';
I[42][2] = '0';
I[42][3] = new Array();
I[42][3][0] = new Array('Mac OS X','',0,0,1);
I[42][3][1] = new Array('Windows','',1,100,1);
I[42][3][2] = new Array('Linux','',0,0,1);
I[42][3][3] = new Array('All of these','',0,0,1);
I[43] = new Array();
I[43][0] = 100;
I[43][1] = '';
I[43][2] = '0';
I[43][3] = new Array();
I[43][3][0] = new Array('Selenium 1','',0,0,1);
I[43][3][1] = new Array('Selenium 2','',1,100,1);
I[43][3][2] = new Array('None of these','',0,0,1);
I[43][3][3] = new Array('Selenium IDE','',0,0,1);
I[44] = new Array();
I[44][0] = 100;
I[44][1] = '';
I[44][2] = '0';
I[44][3] = new Array();
I[44][3][0] = new Array('StaleElementReferenceException','',1,100,1);
I[44][3][1] = new Array('NoSuchElementException','',0,0,1);
I[44][3][2] = new Array('InvalidElementStateException','',0,0,1);
I[44][3][3] = new Array('ElementNotInteractableException','',0,0,1);
I[45] = new Array();
I[45][0] = 100;
I[45][1] = '';
I[45][2] = '0';
I[45][3] = new Array();
I[45][3][0] = new Array('null','',0,0,1);
I[45][3][1] = new Array('int','',0,0,1);
I[45][3][2] = new Array('void','',1,100,1);
I[45][3][3] = new Array('none of these','',0,0,1);
I[46] = new Array();
I[46][0] = 100;
I[46][1] = '';
I[46][2] = '0';
I[46][3] = new Array();
I[46][3][0] = new Array('Capability Management Database','',0,0,1);
I[46][3][1] = new Array('Availability Management Database','',0,0,1);
I[46][3][2] = new Array('Configuration Management Database','',1,100,1);
I[46][3][3] = new Array('The Asset Tracking database','',0,0,1);
I[47] = new Array();
I[47][0] = 100;
I[47][1] = '';
I[47][2] = '0';
I[47][3] = new Array();
I[47][3][0] = new Array('FAILED_FORWARDING_TO_NODE','',0,0,1);
I[47][3][1] = new Array('STOPPED_FORWARDING_TO_NODE','',0,0,1);
I[47][3][2] = new Array('FORWARDING_TO_NODE_FAILED','',1,100,1);
I[47][3][3] = new Array('FORWARDING_TO_NODE_STOPPED','',0,0,1);
I[48] = new Array();
I[48][0] = 100;
I[48][1] = '';
I[48][2] = '0';
I[48][3] = new Array();
I[48][3][0] = new Array('exe','',0,0,1);
I[48][3][1] = new Array('dll','',1,100,1);
I[48][3][2] = new Array('none of these','',0,0,1);
I[48][3][3] = new Array('com','',0,0,1);
I[49] = new Array();
I[49][0] = 100;
I[49][1] = '';
I[49][2] = '0';
I[49][3] = new Array();
I[49][3][0] = new Array('serving ui elements','',0,0,1);
I[49][3][1] = new Array('defining ui elements','',0,0,1);
I[49][3][2] = new Array('all of these','',1,100,1);
I[49][3][3] = new Array('storing ui elements','',0,0,1);
I[50] = new Array();
I[50][0] = 100;
I[50][1] = '';
I[50][2] = '0';
I[50][3] = new Array();
I[50][3][0] = new Array('view','',0,0,1);
I[50][3][1] = new Array('action','',0,0,1);
I[50][3][2] = new Array('edit','',0,0,1);
I[50][3][3] = new Array('options','',1,100,1);
I[51] = new Array();
I[51][0] = 100;
I[51][1] = '';
I[51][2] = '0';
I[51][3] = new Array();
I[51][3][0] = new Array('Selenium Grid','',0,0,1);
I[51][3][1] = new Array('None of these','',0,0,1);
I[51][3][2] = new Array('Selenium 2','',0,0,1);
I[51][3][3] = new Array('Selenium RC','',1,100,1);
I[52] = new Array();
I[52][0] = 100;
I[52][1] = '';
I[52][2] = '0';
I[52][3] = new Array();
I[52][3][0] = new Array('text box','',0,0,1);
I[52][3][1] = new Array('radio button','',0,0,1);
I[52][3][2] = new Array('drop down','',0,0,1);
I[52][3][3] = new Array('all of these','',1,100,1);
I[53] = new Array();
I[53][0] = 100;
I[53][1] = '';
I[53][2] = '0';
I[53][3] = new Array();
I[53][3][0] = new Array('Both ExplicitWait and click','',0,0,1);
I[53][3][1] = new Array('ExplicitWait','',1,100,1);
I[53][3][2] = new Array('depends upon AUT','',0,0,1);
I[53][3][3] = new Array('click','',0,0,1);
I[54] = new Array();
I[54][0] = 100;
I[54][1] = '';
I[54][2] = '0';
I[54][3] = new Array();
I[54][3][0] = new Array('assertValueFromCompoundTable','',1,100,1);
I[54][3][1] = new Array('VerifyValueFromCompoundTable','',0,0,1);
I[54][3][2] = new Array('doverifyValueFromCompoundTable','',0,0,1);
I[54][3][3] = new Array('AssertValueFromCompoundTable','',0,0,1);
I[55] = new Array();
I[55][0] = 100;
I[55][1] = '';
I[55][2] = '0';
I[55][3] = new Array();
I[55][3][0] = new Array('have','',0,0,1);
I[55][3][1] = new Array('get','',1,100,1);
I[55][3][2] = new Array('put','',0,0,1);
I[55][3][3] = new Array('let','',0,0,1);
I[56] = new Array();
I[56][0] = 100;
I[56][1] = '';
I[56][2] = '0';
I[56][3] = new Array();
I[56][3][0] = new Array('Dynamic','',1,100,1);
I[56][3][1] = new Array('Function','',0,0,1);
I[56][3][2] = new Array('AJAX','',0,0,1);
I[56][3][3] = new Array('Static','',0,0,1);
I[57] = new Array();
I[57][0] = 100;
I[57][1] = '';
I[57][2] = '0';
I[57][3] = new Array();
I[57][3][0] = new Array('IaaS by Amazon EC2','',0,0,1);
I[57][3][1] = new Array('Company owned Data center','',0,0,1);
I[57][3][2] = new Array('All of these','',1,100,1);
I[57][3][3] = new Array('IaaS by Google Compute','',0,0,1);
I[58] = new Array();
I[58][0] = 100;
I[58][1] = '';
I[58][2] = '0';
I[58][3] = new Array();
I[58][3][0] = new Array('3','',0,0,1);
I[58][3][1] = new Array('4','',0,0,1);
I[58][3][2] = new Array('1','',1,100,1);
I[58][3][3] = new Array('2','',0,0,1);
I[59] = new Array();
I[59][0] = 100;
I[59][1] = '';
I[59][2] = '0';
I[59][3] = new Array();
I[59][3][0] = new Array('NoAlertException','',0,0,1);
I[59][3][1] = new Array('NoAlertPresentException','',1,100,1);
I[59][3][2] = new Array('AlertPresentException','',0,0,1);
I[60] = new Array();
I[60][0] = 100;
I[60][1] = '';
I[60][2] = '0';
I[60][3] = new Array();
I[60][3][0] = new Array('--','',0,0,1);
I[60][3][1] = new Array('-','',1,100,1);
I[60][3][2] = new Array('/','',0,0,1);
I[60][3][3] = new Array('+','',0,0,1);
I[61] = new Array();
I[61][0] = 100;
I[61][1] = '';
I[61][2] = '0';
I[61][3] = new Array();
I[61][3][0] = new Array('2','',1,100,1);
I[61][3][1] = new Array('1','',0,0,1);
I[61][3][2] = new Array('4','',0,0,1);
I[61][3][3] = new Array('3','',0,0,1);
I[62] = new Array();
I[62][0] = 100;
I[62][1] = '';
I[62][2] = '0';
I[62][3] = new Array();
I[62][3][0] = new Array('WebDriver driver = new InternetExplorerDriver();','',1,100,1);
I[62][3][1] = new Array('WebDriver driver = new edgeDriver();','',0,0,1);
I[62][3][2] = new Array('WebDriver driver = new EdgeDriver();','',0,0,1);
I[62][3][3] = new Array('WebDriver driver = new Edge();','',0,0,1);
I[63] = new Array();
I[63][0] = 100;
I[63][1] = '';
I[63][2] = '0';
I[63][3] = new Array();
I[63][3][0] = new Array('value field in test case','',0,0,1);
I[63][3][1] = new Array('target element','',1,100,1);
I[63][3][2] = new Array('none of these','',0,0,1);
I[63][3][3] = new Array('error message to display','',0,0,1);
I[64] = new Array();
I[64][0] = 100;
I[64][1] = '';
I[64][2] = '0';
I[64][3] = new Array();
I[64][3][0] = new Array('http://<jenkins_IP>/restart','',1,100,1);
I[64][3][1] = new Array('http://<jenkins_IP>/reboot','',0,0,1);
I[64][3][2] = new Array('http://<jenkins_IP>/?action=restart','',0,0,1);
I[64][3][3] = new Array('http://<jenkins_IP>/?action=reboot','',0,0,1);
I[65] = new Array();
I[65][0] = 100;
I[65][1] = '';
I[65][2] = '0';
I[65][3] = new Array();
I[65][3][0] = new Array('Manage multiple environments from a central point, making it easy to run tests against a large combination of browsers and operating system','',0,0,1);
I[65][3][1] = new Array('Scale by distributing tests on several machines using parallel execution','',0,0,1);
I[65][3][2] = new Array('Minimize the maintenance time for the grid by allowing you to implement custom hooks to leverage a virtual infrastructure of registered nodes.','',0,0,1);
I[65][3][3] = new Array('All of these','',1,100,1);
I[66] = new Array();
I[66][0] = 100;
I[66][1] = '';
I[66][2] = '0';
I[66][3] = new Array();
I[66][3][0] = new Array('3 seconds','',0,0,1);
I[66][3][1] = new Array('30 seconds','',0,0,1);
I[66][3][2] = new Array('300 seconds','',1,100,1);
I[66][3][3] = new Array('3000 seconds','',0,0,1);
I[67] = new Array();
I[67][0] = 100;
I[67][1] = '';
I[67][2] = '0';
I[67][3] = new Array();
I[67][3][0] = new Array('RemoteCommandException','',0,0,1);
I[67][3][1] = new Array('CommandException','',0,0,1);
I[67][3][2] = new Array('UnsupportedCommandException','',1,100,1);
I[67][3][3] = new Array('UnsupportedRemoteCommandException','',0,0,1);
I[68] = new Array();
I[68][0] = 100;
I[68][1] = '';
I[68][2] = '0';
I[68][3] = new Array();
I[68][3][0] = new Array('deleteCookieNamed','',1,100,1);
I[68][3][1] = new Array('None of these','',0,0,1);
I[68][3][2] = new Array('deleteAllCookies','',0,0,1);
I[68][3][3] = new Array('deleteCookie','',0,0,1);
I[69] = new Array();
I[69][0] = 100;
I[69][1] = '';
I[69][2] = '0';
I[69][3] = new Array();
I[69][3][0] = new Array('Support for Agile and extreme development methodologies','',0,0,1);
I[69][3][1] = new Array('Disciplined documentation of test cases','',0,0,1);
I[69][3][2] = new Array('Customized defect reporting','',0,0,1);
I[69][3][3] = new Array('All of these','',1,100,1);
I[70] = new Array();
I[70][0] = 100;
I[70][1] = '';
I[70][2] = '0';
I[70][3] = new Array();
I[70][3][0] = new Array('all','',1,100,1);
I[70][3][1] = new Array('warning','',0,0,1);
I[70][3][2] = new Array('debug','',0,0,1);
I[70][3][3] = new Array('info','',0,0,1);
I[71] = new Array();
I[71][0] = 100;
I[71][1] = '';
I[71][2] = '0';
I[71][3] = new Array();
I[71][3][0] = new Array('moveToElement','',0,0,1);
I[71][3][1] = new Array('executeScript','',1,100,1);
I[71][3][2] = new Array('Depends upon AUT','',0,0,1);
I[71][3][3] = new Array('Depends upon visibility','',0,0,1);
I[72] = new Array();
I[72][0] = 100;
I[72][1] = '';
I[72][2] = '0';
I[72][3] = new Array();
I[72][3][0] = new Array('getCookieNamed','',0,0,1);
I[72][3][1] = new Array('none of these','',0,0,1);
I[72][3][2] = new Array('getCookie','',0,0,1);
I[72][3][3] = new Array('getCookies','',1,100,1);
I[73] = new Array();
I[73][0] = 100;
I[73][1] = '';
I[73][2] = '0';
I[73][3] = new Array();
I[73][3][0] = new Array('300 seconds','',1,100,1);
I[73][3][1] = new Array('100 seconds','',0,0,1);
I[73][3][2] = new Array('200 seconds','',0,0,1);
I[73][3][3] = new Array('500 seconds','',0,0,1);
I[74] = new Array();
I[74][0] = 100;
I[74][1] = '';
I[74][2] = '0';
I[74][3] = new Array();
I[74][3][0] = new Array('Locator','',0,0,1);
I[74][3][1] = new Array('Action','',0,0,1);
I[74][3][2] = new Array('Accessor','',0,0,1);
I[74][3][3] = new Array('None of these','',1,100,1);
I[75] = new Array();
I[75][0] = 100;
I[75][1] = '';
I[75][2] = '0';
I[75][3] = new Array();
I[75][3][0] = new Array('all of these','',1,100,1);
I[75][3][1] = new Array('easier debugging','',0,0,1);
I[75][3][2] = new Array('visibility into code helps manage complexity','',0,0,1);
I[75][3][3] = new Array('it allows developers to see exactly what code is doing','',0,0,1);
I[76] = new Array();
I[76][0] = 100;
I[76][1] = '';
I[76][2] = '0';
I[76][3] = new Array();
I[76][3][0] = new Array('2008','',1,100,1);
I[76][3][1] = new Array('2002','',0,0,1);
I[76][3][2] = new Array('2004','',0,0,1);
I[76][3][3] = new Array('2006','',0,0,1);
I[77] = new Array();
I[77][0] = 100;
I[77][1] = '';
I[77][2] = '0';
I[77][3] = new Array();
I[77][3][0] = new Array('Apache Maven','',1,100,1);
I[77][3][1] = new Array('Spring Framework','',0,0,1);
I[77][3][2] = new Array('Hibernate','',0,0,1);
I[77][3][3] = new Array('Apache Tomcat','',0,0,1);
I[78] = new Array();
I[78][0] = 100;
I[78][1] = '';
I[78][2] = '0';
I[78][3] = new Array();
I[78][3][0] = new Array('String','',1,100,1);
I[78][3][1] = new Array('boolean','',0,0,1);
I[78][3][2] = new Array('char','',0,0,1);
I[78][3][3] = new Array('none of these','',0,0,1);
I[79] = new Array();
I[79][0] = 100;
I[79][1] = '';
I[79][2] = '0';
I[79][3] = new Array();
I[79][3][0] = new Array('move to left of window','',1,100,1);
I[79][3][1] = new Array('move to right of window','',0,0,1);
I[79][3][2] = new Array('no change','',0,0,1);
I[79][3][3] = new Array('depends upon AUT','',0,0,1);
I[80] = new Array();
I[80][0] = 100;
I[80][1] = '';
I[80][2] = '0';
I[80][3] = new Array();
I[80][3][0] = new Array('Test','',0,0,1);
I[80][3][1] = new Array('ParameterizedTest','',0,0,1);
I[80][3][2] = new Array('TestInstance','',1,100,1);
I[80][3][3] = new Array('TestFactory','',0,0,1);
I[81] = new Array();
I[81][0] = 100;
I[81][1] = '';
I[81][2] = '0';
I[81][3] = new Array();
I[81][3][0] = new Array('css="div#child img"','',1,100,1);
I[81][3][1] = new Array('css="div.child img"','',0,0,1);
I[81][3][2] = new Array('css="div^child img"','',0,0,1);
I[81][3][3] = new Array('css="div$child img"','',0,0,1);
I[82] = new Array();
I[82][0] = 100;
I[82][1] = '';
I[82][2] = '0';
I[82][3] = new Array();
I[82][3][0] = new Array('15 seconds','',0,0,1);
I[82][3][1] = new Array('45 seconds','',0,0,1);
I[82][3][2] = new Array('60 seconds','',1,100,1);
I[82][3][3] = new Array('30 seconds','',0,0,1);


function StartUp(){
	RemoveBottomNavBarForIE();

//If there's only one question, no need for question navigation controls
	if (QsToShow < 2){
		document.getElementById('QNav').style.display = 'none';
	}
	
//Stash the instructions so they can be redisplayed
	strInstructions = document.getElementById('InstructionsDiv').innerHTML;
	

	

	

	
	CompleteEmptyFeedback();

	SetUpQuestions();
	ClearTextBoxes();
	CreateStatusArray();
	

	
//Check search string for q parameter
	if (document.location.search.length > 0){
		if (ShuffleQs == false){
			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
			if (JumpTo <= QsToShow){
				ChangeQ(JumpTo);
			}
		}
	}
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
}

function ShowHideQuestions(){
	FuncBtnOut(document.getElementById('ShowMethodButton'));
	document.getElementById('ShowMethodButton').style.display = 'none';
	if (ShowingAllQuestions == false){
		for (var i=0; i<QArray.length; i++){
				QArray[i].style.display = '';
			}
		document.getElementById('Questions').style.listStyleType = 'decimal';
		document.getElementById('OneByOneReadout').style.display = 'none';
		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
		ShowingAllQuestions = true;
	}
	else{
		for (var i=0; i<QArray.length; i++){
				if (i != CurrQNum){
					QArray[i].style.display = 'none';
				}
			}
		document.getElementById('Questions').style.listStyleType = 'none';
		document.getElementById('OneByOneReadout').style.display = '';
		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
		ShowingAllQuestions = false;	
	}
	document.getElementById('ShowMethodButton').style.display = 'inline';
}

function CreateStatusArray(){
	var QNum, ANum;
//For each item in the item array
	for (QNum=0; QNum<I.length; QNum++){
//Check if the question still exists (hasn't been nuked by showing a random selection)
		if (document.getElementById('Q_' + QNum) != null){
			State[QNum] = new Array();
			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
			State[QNum][1] = new Array(); //answers
			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
			}
			State[QNum][2] = 0; //tries at this q so far
			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
			State[QNum][4] = 0; //penalties incurred for hints
			State[QNum][5] = ''; //Sequence of answers chosen by number
		}
		else{
			State[QNum] = null;
		}
	}
}



function CheckMCAnswer(QNum, ANum, Btn){
//if question doesn't exist, bail
	if (State[QNum].length < 1){return;}
	
//Get the feedback
	Feedback = I[QNum][3][ANum][1];
	
//Now show feedback and bail if question already complete
	if (State[QNum][0] > -1){
//Add an extra message explaining that the question
// is finished if defined by the user
		if (strQuestionFinished.length > 0){Feedback += '<br />' + strQuestionFinished;}
//Show the feedback
		ShowMessage(Feedback);
//New for 6.2.2.1: If you want to mark an answer as correct even when it's the final choice, uncomment this line.
//		if (I[QNum][3][ANum][2] >= 1){Btn.innerHTML = CorrectIndicator;}else{Btn.innerHTML = IncorrectIndicator;}	
		return;
	}
	
//Hide the button while processing
	Btn.style.display = 'none';

//Increment the number of tries
	State[QNum][2]++;
	
//Add the percent-correct value of this answer
	State[QNum][3] += I[QNum][3][ANum][3];
	
//Store the try number in the answer part of the State array, for tracking purposes
	State[QNum][1][ANum] = State[QNum][2];
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	State[QNum][5] += String.fromCharCode(65+ANum);
	
//Should this answer be accepted as correct?
	if (I[QNum][3][ANum][2] < 1){
//It's wrong

//Mark the answer
		Btn.innerHTML = IncorrectIndicator;
		
//Remove any previous score unless exercise is finished (6.0.3.8+)
		if (Finished == false){
			WriteToInstructions(strInstructions);
		}	
		
//Check whether this leaves just one MC answer unselected, in which case the Q is terminated
		var RemainingAnswer = FinalAnswer(QNum);
		if (RemainingAnswer > -1){
//Behave as if the last answer had been selected, but give no credit for it
//Increment the number of tries
			State[QNum][2]++;		
		
//Calculate the score for this question
			CalculateMCQuestionScore(QNum);
			
//Get the overall score and add it to the feedback
			CalculateOverallScore();
//New for 6.2.2.1
			var QsDone = CheckQuestionsCompleted();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
		}
	}
	else{
//It's right
//Mark the answer
		Btn.innerHTML = CorrectIndicator;
				
//Calculate the score for this question
		CalculateMCQuestionScore(QNum);
		
//New for 6.2.2.0
		var QsDone = CheckQuestionsCompleted();

//Get the overall score and add it to the feedback
		if (ContinuousScoring == true){
			CalculateOverallScore();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
		}
		else{
			WriteToInstructions(QsDone);
		}
	}
	
//Show the button again
	Btn.style.display = 'inline';
	
//Finally, show the feedback	
	ShowMessage(Feedback);
	
//Check whether all questions are now done
	CheckFinished();
}

function CalculateMCQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties
	var PercentCorrect = State[QNum][3];
	var TotAns = GetTotalMCAnswers(QNum);
	var HintPenalties = State[QNum][4];
	
//Make sure it's not already complete

	if (State[QNum][0] < 0){
//Allow for Hybrids
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
//This line calculates the score for this question
			if (TotAns == 1){
				State[QNum][0] = 1;
			}
			else{
				State[QNum][0] = ((TotAns-((Tries*100)/State[QNum][3]))/(TotAns-1));
			}
		}
//Fix for Safari bug added for version 6.0.3.42 (negative infinity problem)
		if ((State[QNum][0] < 0)||(State[QNum][0] == Number.NEGATIVE_INFINITY)){
			State[QNum][0] = 0;
		}
	}
}

function GetTotalMCAnswers(QNum){
	var Result = 0;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			Result++;
		}
	}
	return Result;
}

function FinalAnswer(QNum){
	var UnchosenAnswers = 0;
	var FinalAnswer = -1;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			if (State[QNum][1][ANum] < 1){ //This answer hasn't been chosen yet
				UnchosenAnswers++;
				FinalAnswer = ANum;
			}
		}
	}
	if (UnchosenAnswers == 1){
		return FinalAnswer;
	}
	else{
		return -1;
	}
}





function CalculateOverallScore(){
	var TotalWeighting = 0;
	var TotalScore = 0;
	
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] > -1){
				TotalWeighting += I[QNum][0];
				TotalScore += (I[QNum][0] * State[QNum][0]);
			}
		}
	}
	if (TotalWeighting > 0){
		Score = Math.floor((TotalScore/TotalWeighting)*100);
	}
	else{
//if TotalWeighting is 0, no questions so far have any value, so 
//no penalty should be shown.
		Score = 100; 
	}
}

//New for 6.2.2.0
function CheckQuestionsCompleted(){
	if (ShowCompletedSoFar == false){return '';}
	var QsCompleted = 0;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] >= 0){
				QsCompleted++;
			}
		}
	}
//Fixes for 6.2.2.2
	if (QsCompleted >= QArray.length){
		return ExerciseCompleted;
	}
	else{
		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
	}
}

function CheckFinished(){
	var FB = '';
	var AllDone = true;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				AllDone = false;
			}
		}
	}
	if (AllDone == true){
	
//Report final score and submit if necessary
		CalculateOverallScore();
		FB = YourScoreIs + ' ' + Score + '%.';
		if (ShowCorrectFirstTime == true){
			var CFT = 0;
			for (QNum=0; QNum<State.length; QNum++){
				if (State[QNum] != null){
					if (State[QNum][0] >= 1){
						CFT++;
					}
				}
			}
			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
		}
		
//New for 6.2.2.0
		FB += '<br />' + ExerciseCompleted;
		
		WriteToInstructions(FB);
		
		Finished == true;




		TimeOver = true;
		Locked = true;
		


		Finished = true;
		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
		for (QNum=0; QNum<State.length; QNum++){
			if (State[QNum] != null){
				if (State[QNum][5].length > 0){
					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
				}
			}
		}
		Detail += '</fields></hpnetresult>';
		setTimeout('Finish()', SubmissionTimeout);
	}

}









//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='index.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='nextpage.htm'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">Selenium Quiz</h2>



</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions"></div>
</div>




<div id="MainDiv" class="StdDiv">
 
<div id="QNav" class="QuestionNavigation">

<p style="text-align: right;">
<button id="ShowMethodButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ShowHideQuestions(); return false;">Show all questions</button>
</p>

<div id="OneByOneReadout">
<button id="PrevQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(-1); return false;">Last Q</button>

<span id="QNumReadout" class="QNum">&nbsp;</span>

<button id="NextQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(1); return false;">Next Q</button>
<br />
</div>

</div>
 
<ol class="QuizQuestions" id="Questions">
<li class="QuizQuestion" id="Q_0" style="display: none;">
<div class="QuestionText">What is the file extension of a file used to extend Selenium?</div>
<ol class="MCAnswers">
<li id="Q_0_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_0_0_Btn"  onclick="CheckMCAnswer(0,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;xml
</li>
<li id="Q_0_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_0_1_Btn"  onclick="CheckMCAnswer(0,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_0_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_0_2_Btn"  onclick="CheckMCAnswer(0,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;txt
</li>
<li id="Q_0_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_0_3_Btn"  onclick="CheckMCAnswer(0,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;html
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_1" style="display: none;">
<div class="QuestionText">Select the prefix applied for all wait functions registered in selenium object prototype</div>
<ol class="MCAnswers">
<li id="Q_1_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_1_0_Btn"  onclick="CheckMCAnswer(1,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;wait
</li>
<li id="Q_1_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_1_1_Btn"  onclick="CheckMCAnswer(1,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;stop
</li>
<li id="Q_1_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_1_2_Btn"  onclick="CheckMCAnswer(1,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_1_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_1_3_Btn"  onclick="CheckMCAnswer(1,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;halt
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_2" style="display: none;">
<div class="QuestionText">Which of the following is present for each accessor used to extend Selenium?</div>
<ol class="MCAnswers">
<li id="Q_2_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_2_0_Btn"  onclick="CheckMCAnswer(2,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;assertFoo
</li>
<li id="Q_2_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_2_1_Btn"  onclick="CheckMCAnswer(2,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all of these
</li>
<li id="Q_2_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_2_2_Btn"  onclick="CheckMCAnswer(2,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;verifyFoo
</li>
<li id="Q_2_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_2_3_Btn"  onclick="CheckMCAnswer(2,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;waitForFoo
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_3" style="display: none;">
<div class="QuestionText">What is the default setting for implicit wait in Selenium?</div>
<ol class="MCAnswers">
<li id="Q_3_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_3_0_Btn"  onclick="CheckMCAnswer(3,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value of 30
</li>
<li id="Q_3_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_3_1_Btn"  onclick="CheckMCAnswer(3,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;not defined
</li>
<li id="Q_3_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_3_2_Btn"  onclick="CheckMCAnswer(3,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value of 10
</li>
<li id="Q_3_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_3_3_Btn"  onclick="CheckMCAnswer(3,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value of 0
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_4" style="display: none;">
<div class="QuestionText">Which type of software testing is test automation more suitable for?</div>
<ol class="MCAnswers">
<li id="Q_4_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_4_0_Btn"  onclick="CheckMCAnswer(4,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;integration testing
</li>
<li id="Q_4_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_4_1_Btn"  onclick="CheckMCAnswer(4,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;static testing
</li>
<li id="Q_4_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_4_2_Btn"  onclick="CheckMCAnswer(4,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;regression testing
</li>
<li id="Q_4_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_4_3_Btn"  onclick="CheckMCAnswer(4,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;API testing
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_5" style="display: none;">
<div class="QuestionText">What is the return value of the getCookieNamed method if no cookie is found with the given name?</div>
<ol class="MCAnswers">
<li id="Q_5_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_5_0_Btn"  onclick="CheckMCAnswer(5,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value of 0
</li>
<li id="Q_5_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_5_1_Btn"  onclick="CheckMCAnswer(5,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;null
</li>
<li id="Q_5_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_5_2_Btn"  onclick="CheckMCAnswer(5,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;exception is raised
</li>
<li id="Q_5_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_5_3_Btn"  onclick="CheckMCAnswer(5,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value of -1
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_6" style="display: none;">
<div class="QuestionText">What database is used for Data Driven Testing?</div>
<ol class="MCAnswers">
<li id="Q_6_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_6_0_Btn"  onclick="CheckMCAnswer(6,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;ADO objects
</li>
<li id="Q_6_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_6_1_Btn"  onclick="CheckMCAnswer(6,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;DAO objects
</li>
<li id="Q_6_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_6_2_Btn"  onclick="CheckMCAnswer(6,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_6_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_6_3_Btn"  onclick="CheckMCAnswer(6,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Data pool
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_7" style="display: none;">
<div class="QuestionText">Which class does EventFiringWebDriver acts as a wrapper on?</div>
<ol class="MCAnswers">
<li id="Q_7_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_7_0_Btn"  onclick="CheckMCAnswer(7,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;EventListener
</li>
<li id="Q_7_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_7_1_Btn"  onclick="CheckMCAnswer(7,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;EventFiring
</li>
<li id="Q_7_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_7_2_Btn"  onclick="CheckMCAnswer(7,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver
</li>
<li id="Q_7_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_7_3_Btn"  onclick="CheckMCAnswer(7,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_8" style="display: none;">
<div class="QuestionText">What is the data type of value accepted by environment DesiredCapability in Selenium Grid?</div>
<ol class="MCAnswers">
<li id="Q_8_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_8_0_Btn"  onclick="CheckMCAnswer(8,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;char
</li>
<li id="Q_8_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_8_1_Btn"  onclick="CheckMCAnswer(8,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;float
</li>
<li id="Q_8_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_8_2_Btn"  onclick="CheckMCAnswer(8,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;string
</li>
<li id="Q_8_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_8_3_Btn"  onclick="CheckMCAnswer(8,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;bool
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_9" style="display: none;">
<div class="QuestionText">Which tab is used to specify the location of file to extend Selenium in options menu of Selenium IDE?</div>
<ol class="MCAnswers">
<li id="Q_9_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_9_0_Btn"  onclick="CheckMCAnswer(9,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver
</li>
<li id="Q_9_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_9_1_Btn"  onclick="CheckMCAnswer(9,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;plugin
</li>
<li id="Q_9_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_9_2_Btn"  onclick="CheckMCAnswer(9,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;General
</li>
<li id="Q_9_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_9_3_Btn"  onclick="CheckMCAnswer(9,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Formats
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_10" style="display: none;">
<div class="QuestionText">What refers to hierarchical key-value store in HTML5?</div>
<ol class="MCAnswers">
<li id="Q_10_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_10_0_Btn"  onclick="CheckMCAnswer(10,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;AppCache
</li>
<li id="Q_10_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_10_1_Btn"  onclick="CheckMCAnswer(10,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Canvas
</li>
<li id="Q_10_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_10_2_Btn"  onclick="CheckMCAnswer(10,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebSockets
</li>
<li id="Q_10_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_10_3_Btn"  onclick="CheckMCAnswer(10,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;IndexedDB
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_11" style="display: none;">
<div class="QuestionText">Which Selenium tool supports extensions?</div>
<ol class="MCAnswers">
<li id="Q_11_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_11_0_Btn"  onclick="CheckMCAnswer(11,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_11_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_11_1_Btn"  onclick="CheckMCAnswer(11,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium Grid
</li>
<li id="Q_11_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_11_2_Btn"  onclick="CheckMCAnswer(11,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium 2
</li>
<li id="Q_11_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_11_3_Btn"  onclick="CheckMCAnswer(11,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium 3
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_12" style="display: none;">
<div class="QuestionText">Which method is used to fetch a web page by WebDriver?</div>
<ol class="MCAnswers">
<li id="Q_12_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_12_0_Btn"  onclick="CheckMCAnswer(12,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;get
</li>
<li id="Q_12_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_12_1_Btn"  onclick="CheckMCAnswer(12,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;httpget
</li>
<li id="Q_12_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_12_2_Btn"  onclick="CheckMCAnswer(12,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;fetch
</li>
<li id="Q_12_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_12_3_Btn"  onclick="CheckMCAnswer(12,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;obtain
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_13" style="display: none;">
<div class="QuestionText">Which selenium component can scale for large test suites or test suites that must be run in multiple environments?</div>
<ol class="MCAnswers">
<li id="Q_13_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_13_0_Btn"  onclick="CheckMCAnswer(13,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium NG
</li>
<li id="Q_13_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_13_1_Btn"  onclick="CheckMCAnswer(13,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium WebDriver
</li>
<li id="Q_13_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_13_2_Btn"  onclick="CheckMCAnswer(13,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium RC
</li>
<li id="Q_13_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_13_3_Btn"  onclick="CheckMCAnswer(13,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium Grid
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_14" style="display: none;">
<div class="QuestionText">Which of the following environment variable in essential in integrating Selenium and Maven?</div>
<ol class="MCAnswers">
<li id="Q_14_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_14_0_Btn"  onclick="CheckMCAnswer(14,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;PATH
</li>
<li id="Q_14_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_14_1_Btn"  onclick="CheckMCAnswer(14,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;HOME
</li>
<li id="Q_14_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_14_2_Btn"  onclick="CheckMCAnswer(14,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;JAVA_HOME
</li>
<li id="Q_14_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_14_3_Btn"  onclick="CheckMCAnswer(14,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;JAVA_PATH
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_15" style="display: none;">
<div class="QuestionText">Which of the following is supported by Selenium for implementing Data Driven Testing?</div>
<ol class="MCAnswers">
<li id="Q_15_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_15_0_Btn"  onclick="CheckMCAnswer(15,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Excel files
</li>
<li id="Q_15_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_15_1_Btn"  onclick="CheckMCAnswer(15,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;CVS files
</li>
<li id="Q_15_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_15_2_Btn"  onclick="CheckMCAnswer(15,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_15_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_15_3_Btn"  onclick="CheckMCAnswer(15,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;ODBC source
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_16" style="display: none;">
<div class="QuestionText">What will be the result of mixing implicit and explicit waits in Selenium?</div>
<ol class="MCAnswers">
<li id="Q_16_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_16_0_Btn"  onclick="CheckMCAnswer(16,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;undefined behavior
</li>
<li id="Q_16_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_16_1_Btn"  onclick="CheckMCAnswer(16,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;exception is raised
</li>
<li id="Q_16_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_16_2_Btn"  onclick="CheckMCAnswer(16,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;depends upon AUT
</li>
<li id="Q_16_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_16_3_Btn"  onclick="CheckMCAnswer(16,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;No error or issue
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_17" style="display: none;">
<div class="QuestionText">Which HTML5 element is used to draw charts, graphics, data-driven diagrams</div>
<ol class="MCAnswers">
<li id="Q_17_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_17_0_Btn"  onclick="CheckMCAnswer(17,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;IndexedDB
</li>
<li id="Q_17_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_17_1_Btn"  onclick="CheckMCAnswer(17,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;AppCache
</li>
<li id="Q_17_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_17_2_Btn"  onclick="CheckMCAnswer(17,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Canvas
</li>
<li id="Q_17_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_17_3_Btn"  onclick="CheckMCAnswer(17,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebSockets
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_18" style="display: none;">
<div class="QuestionText">What is the default port used by selenium hub for communication?</div>
<ol class="MCAnswers">
<li id="Q_18_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_18_0_Btn"  onclick="CheckMCAnswer(18,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;4444
</li>
<li id="Q_18_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_18_1_Btn"  onclick="CheckMCAnswer(18,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;8000
</li>
<li id="Q_18_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_18_2_Btn"  onclick="CheckMCAnswer(18,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;8080
</li>
<li id="Q_18_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_18_3_Btn"  onclick="CheckMCAnswer(18,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;80
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_19" style="display: none;">
<div class="QuestionText">Which Selenium webdriver's method will return the cookie value for the name specified or null if no cookie is found with the given name?</div>
<ol class="MCAnswers">
<li id="Q_19_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_19_0_Btn"  onclick="CheckMCAnswer(19,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_19_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_19_1_Btn"  onclick="CheckMCAnswer(19,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookieNamed
</li>
<li id="Q_19_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_19_2_Btn"  onclick="CheckMCAnswer(19,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookie
</li>
<li id="Q_19_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_19_3_Btn"  onclick="CheckMCAnswer(19,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookies
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_20" style="display: none;">
<div class="QuestionText">What is the minimum Java version needed for Jenkins installation?</div>
<ol class="MCAnswers">
<li id="Q_20_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_20_0_Btn"  onclick="CheckMCAnswer(20,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;version 7
</li>
<li id="Q_20_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_20_1_Btn"  onclick="CheckMCAnswer(20,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;version 5
</li>
<li id="Q_20_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_20_2_Btn"  onclick="CheckMCAnswer(20,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;version 6
</li>
<li id="Q_20_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_20_3_Btn"  onclick="CheckMCAnswer(20,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;version 8
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_21" style="display: none;">
<div class="QuestionText">What event will cause the driver to stop polling the page if implicitlyWait is used and searching for multiple elements on a web page in Selenium?</div>
<ol class="MCAnswers">
<li id="Q_21_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_21_0_Btn"  onclick="CheckMCAnswer(21,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;at least one element has been found
</li>
<li id="Q_21_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_21_1_Btn"  onclick="CheckMCAnswer(21,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;at least one element has been found or timeout has expired
</li>
<li id="Q_21_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_21_2_Btn"  onclick="CheckMCAnswer(21,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;depends upon AUT
</li>
<li id="Q_21_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_21_3_Btn"  onclick="CheckMCAnswer(21,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;timeout has expired
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_22" style="display: none;">
<div class="QuestionText">Which operating system supports Selenium installation and application on Chromium web browser?</div>
<ol class="MCAnswers">
<li id="Q_22_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_22_0_Btn"  onclick="CheckMCAnswer(22,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Mac OS
</li>
<li id="Q_22_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_22_1_Btn"  onclick="CheckMCAnswer(22,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Linux
</li>
<li id="Q_22_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_22_2_Btn"  onclick="CheckMCAnswer(22,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_22_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_22_3_Btn"  onclick="CheckMCAnswer(22,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Windows
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_23" style="display: none;">
<div class="QuestionText">What is the data type of value returned by getPath function?</div>
<ol class="MCAnswers">
<li id="Q_23_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_23_0_Btn"  onclick="CheckMCAnswer(23,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_23_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_23_1_Btn"  onclick="CheckMCAnswer(23,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;bool
</li>
<li id="Q_23_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_23_2_Btn"  onclick="CheckMCAnswer(23,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;char
</li>
<li id="Q_23_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_23_3_Btn"  onclick="CheckMCAnswer(23,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;String
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_24" style="display: none;">
<div class="QuestionText">What is the feature of Webdriver API?</div>
<ol class="MCAnswers">
<li id="Q_24_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_24_0_Btn"  onclick="CheckMCAnswer(24,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Browser specific control mechanism
</li>
<li id="Q_24_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_24_1_Btn"  onclick="CheckMCAnswer(24,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_24_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_24_2_Btn"  onclick="CheckMCAnswer(24,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;object oriented API
</li>
<li id="Q_24_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_24_3_Btn"  onclick="CheckMCAnswer(24,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;HTMLUnit support
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_25" style="display: none;">
<div class="QuestionText">Select the correct CSS selector for second div element if :
- two div elements have the same id part1
- and the HTML code is <div id="d1"><div id="part1"></div></div><div id="d2"><div id="part1"></div></div></div>
<ol class="MCAnswers">
<li id="Q_25_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_25_0_Btn"  onclick="CheckMCAnswer(25,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;#d2 #part1
</li>
<li id="Q_25_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_25_1_Btn"  onclick="CheckMCAnswer(25,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;#d2>#part1
</li>
<li id="Q_25_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_25_2_Btn"  onclick="CheckMCAnswer(25,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;#d2<#part1
</li>
<li id="Q_25_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_25_3_Btn"  onclick="CheckMCAnswer(25,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;#d2.#part1
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_26" style="display: none;">
<div class="QuestionText">What is the data type of value returned by addCookie function?</div>
<ol class="MCAnswers">
<li id="Q_26_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_26_0_Btn"  onclick="CheckMCAnswer(26,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;String
</li>
<li id="Q_26_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_26_1_Btn"  onclick="CheckMCAnswer(26,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;boolean
</li>
<li id="Q_26_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_26_2_Btn"  onclick="CheckMCAnswer(26,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;char
</li>
<li id="Q_26_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_26_3_Btn"  onclick="CheckMCAnswer(26,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_27" style="display: none;">
<div class="QuestionText">Which of the following web browser does not support HTML5?</div>
<ol class="MCAnswers">
<li id="Q_27_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_27_0_Btn"  onclick="CheckMCAnswer(27,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Chrome
</li>
<li id="Q_27_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_27_1_Btn"  onclick="CheckMCAnswer(27,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_27_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_27_2_Btn"  onclick="CheckMCAnswer(27,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Firefox
</li>
<li id="Q_27_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_27_3_Btn"  onclick="CheckMCAnswer(27,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Safari
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_28" style="display: none;">
<div class="QuestionText">Which type of tests are supported by TestNG?</div>
<ol class="MCAnswers">
<li id="Q_28_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_28_0_Btn"  onclick="CheckMCAnswer(28,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;integration test
</li>
<li id="Q_28_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_28_1_Btn"  onclick="CheckMCAnswer(28,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;unit test
</li>
<li id="Q_28_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_28_2_Btn"  onclick="CheckMCAnswer(28,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_28_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_28_3_Btn"  onclick="CheckMCAnswer(28,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;functional test
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_29" style="display: none;">
<div class="QuestionText">Which Xpath selector will located an element with ID ending with the text userName?</div>
<ol class="MCAnswers">
<li id="Q_29_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_29_0_Btn"  onclick="CheckMCAnswer(29,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;input[ends-with(@id,'userName')]
</li>
<li id="Q_29_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_29_1_Btn"  onclick="CheckMCAnswer(29,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;input[end-with(@id,'userName')]
</li>
<li id="Q_29_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_29_2_Btn"  onclick="CheckMCAnswer(29,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;input[end-with(@id,userName)]
</li>
<li id="Q_29_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_29_3_Btn"  onclick="CheckMCAnswer(29,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;input[ends-with(@id,userName)]
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_30" style="display: none;">
<div class="QuestionText">Which of the following is added at the beginning to all methods on the Selenium prototype to be added as actions?</div>
<ol class="MCAnswers">
<li id="Q_30_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_30_0_Btn"  onclick="CheckMCAnswer(30,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;action
</li>
<li id="Q_30_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_30_1_Btn"  onclick="CheckMCAnswer(30,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_30_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_30_2_Btn"  onclick="CheckMCAnswer(30,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;add
</li>
<li id="Q_30_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_30_3_Btn"  onclick="CheckMCAnswer(30,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;method
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_31" style="display: none;">
<div class="QuestionText">Which of the following applications can interact with selenium?</div>
<ol class="MCAnswers">
<li id="Q_31_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_31_0_Btn"  onclick="CheckMCAnswer(31,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Silverlight based application
</li>
<li id="Q_31_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_31_1_Btn"  onclick="CheckMCAnswer(31,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Flash based application
</li>
<li id="Q_31_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_31_2_Btn"  onclick="CheckMCAnswer(31,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;DOM based application
</li>
<li id="Q_31_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_31_3_Btn"  onclick="CheckMCAnswer(31,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_32" style="display: none;">
<div class="QuestionText">Which of the following is to be modified to move from ChromeDriver to PhantomJS in Selenium and the present setting is as - System.setProperty("webdriver.chrome.driver", CHROMEDRIVER_PATH); ?</div>
<ol class="MCAnswers">
<li id="Q_32_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_32_0_Btn"  onclick="CheckMCAnswer(32,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Both DesiredCapabilities and change in phantomjs dependency
</li>
<li id="Q_32_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_32_1_Btn"  onclick="CheckMCAnswer(32,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Silverlight based application
</li>
<li id="Q_32_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_32_2_Btn"  onclick="CheckMCAnswer(32,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;DesiredCapabilities
</li>
<li id="Q_32_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_32_3_Btn"  onclick="CheckMCAnswer(32,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;System.setProperty
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_33" style="display: none;">
<div class="QuestionText">How many arguments are accepted by isDisplayed function in Selenium Webdriver?</div>
<ol class="MCAnswers">
<li id="Q_33_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_33_0_Btn"  onclick="CheckMCAnswer(33,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_33_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_33_1_Btn"  onclick="CheckMCAnswer(33,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;3
</li>
<li id="Q_33_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_33_2_Btn"  onclick="CheckMCAnswer(33,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;1
</li>
<li id="Q_33_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_33_3_Btn"  onclick="CheckMCAnswer(33,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_34" style="display: none;">
<div class="QuestionText">What aspects of an UI element are stored in a UI map?</div>
<ol class="MCAnswers">
<li id="Q_34_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_34_0_Btn"  onclick="CheckMCAnswer(34,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_34_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_34_1_Btn"  onclick="CheckMCAnswer(34,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Locator type of element
</li>
<li id="Q_34_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_34_2_Btn"  onclick="CheckMCAnswer(34,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Name of the element
</li>
<li id="Q_34_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_34_3_Btn"  onclick="CheckMCAnswer(34,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Value of the locator
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_35" style="display: none;">
<div class="QuestionText">What is the return value of sendKeys function in Selenium Webdriver</div>
<ol class="MCAnswers">
<li id="Q_35_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_35_0_Btn"  onclick="CheckMCAnswer(35,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;boolean
</li>
<li id="Q_35_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_35_1_Btn"  onclick="CheckMCAnswer(35,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_35_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_35_2_Btn"  onclick="CheckMCAnswer(35,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;String
</li>
<li id="Q_35_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_35_3_Btn"  onclick="CheckMCAnswer(35,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;char
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_36" style="display: none;">
<div class="QuestionText">Which of the following test code is valid for using implicit wait?</div>
<ol class="MCAnswers">
<li id="Q_36_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_36_0_Btn"  onclick="CheckMCAnswer(36,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;driver().navigate().to(siteurl); driver().manage().timeouts().implicitlyWait(30, SECONDS);
</li>
<li id="Q_36_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_36_1_Btn"  onclick="CheckMCAnswer(36,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Validity depends upon AUT
</li>
<li id="Q_36_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_36_2_Btn"  onclick="CheckMCAnswer(36,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Both code listings are valid
</li>
<li id="Q_36_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_36_3_Btn"  onclick="CheckMCAnswer(36,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;driver().manage().timeouts().implicitlyWait(30, SECONDS); driver().navigate().to(siteurl);
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_37" style="display: none;">
<div class="QuestionText">Which Xpath axis contains all nodes which occur before the context node in document order?</div>
<ol class="MCAnswers">
<li id="Q_37_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_37_0_Btn"  onclick="CheckMCAnswer(37,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_37_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_37_1_Btn"  onclick="CheckMCAnswer(37,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;following
</li>
<li id="Q_37_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_37_2_Btn"  onclick="CheckMCAnswer(37,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;sibling
</li>
<li id="Q_37_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_37_3_Btn"  onclick="CheckMCAnswer(37,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;descendant
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_38" style="display: none;">
<div class="QuestionText">Which RemoteWebDriver mode is applicable for the OperaDriver client?</div>
<ol class="MCAnswers">
<li id="Q_38_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_38_0_Btn"  onclick="CheckMCAnswer(38,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Depends upon the AUT
</li>
<li id="Q_38_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_38_1_Btn"  onclick="CheckMCAnswer(38,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Depends upon AUT
</li>
<li id="Q_38_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_38_2_Btn"  onclick="CheckMCAnswer(38,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Client
</li>
<li id="Q_38_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_38_3_Btn"  onclick="CheckMCAnswer(38,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Server
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_39" style="display: none;">
<div class="QuestionText">Which of the following is not a function for keyboard event in Selenium?</div>
<ol class="MCAnswers">
<li id="Q_39_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_39_0_Btn"  onclick="CheckMCAnswer(39,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;release
</li>
<li id="Q_39_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_39_1_Btn"  onclick="CheckMCAnswer(39,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;sendKeys
</li>
<li id="Q_39_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_39_2_Btn"  onclick="CheckMCAnswer(39,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;KeyUp
</li>
<li id="Q_39_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_39_3_Btn"  onclick="CheckMCAnswer(39,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;KeyDown
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_40" style="display: none;">
<div class="QuestionText">Which of the following Jenkins trigger format will schedule your build every day at 8h00?</div>
<ol class="MCAnswers">
<li id="Q_40_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_40_0_Btn"  onclick="CheckMCAnswer(40,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;* * * 8 0
</li>
<li id="Q_40_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_40_1_Btn"  onclick="CheckMCAnswer(40,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;8 0 * * *
</li>
<li id="Q_40_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_40_2_Btn"  onclick="CheckMCAnswer(40,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;* * * 0 8
</li>
<li id="Q_40_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_40_3_Btn"  onclick="CheckMCAnswer(40,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;0 8 * * *
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_41" style="display: none;">
<div class="QuestionText">What does Firefox profile stores?</div>
<ol class="MCAnswers">
<li id="Q_41_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_41_0_Btn"  onclick="CheckMCAnswer(41,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;bookmarks
</li>
<li id="Q_41_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_41_1_Btn"  onclick="CheckMCAnswer(41,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all of these
</li>
<li id="Q_41_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_41_2_Btn"  onclick="CheckMCAnswer(41,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;passwords
</li>
<li id="Q_41_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_41_3_Btn"  onclick="CheckMCAnswer(41,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;user preferences
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_42" style="display: none;">
<div class="QuestionText">Which operating system is suppored by AutoIT?</div>
<ol class="MCAnswers">
<li id="Q_42_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_42_0_Btn"  onclick="CheckMCAnswer(42,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Mac OS X
</li>
<li id="Q_42_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_42_1_Btn"  onclick="CheckMCAnswer(42,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Windows
</li>
<li id="Q_42_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_42_2_Btn"  onclick="CheckMCAnswer(42,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Linux
</li>
<li id="Q_42_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_42_3_Btn"  onclick="CheckMCAnswer(42,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_43" style="display: none;">
<div class="QuestionText">Which selenium tool uses more realistic simulation of the users's actions by using OS level events?</div>
<ol class="MCAnswers">
<li id="Q_43_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_43_0_Btn"  onclick="CheckMCAnswer(43,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium 1
</li>
<li id="Q_43_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_43_1_Btn"  onclick="CheckMCAnswer(43,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium 2
</li>
<li id="Q_43_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_43_2_Btn"  onclick="CheckMCAnswer(43,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_43_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_43_3_Btn"  onclick="CheckMCAnswer(43,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium IDE
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_44" style="display: none;">
<div class="QuestionText">Which exception is thrown when element may have been removed and readded to the screen since it was located or element is relocated?</div>
<ol class="MCAnswers">
<li id="Q_44_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_44_0_Btn"  onclick="CheckMCAnswer(44,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;StaleElementReferenceException
</li>
<li id="Q_44_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_44_1_Btn"  onclick="CheckMCAnswer(44,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;NoSuchElementException
</li>
<li id="Q_44_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_44_2_Btn"  onclick="CheckMCAnswer(44,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;InvalidElementStateException
</li>
<li id="Q_44_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_44_3_Btn"  onclick="CheckMCAnswer(44,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;ElementNotInteractableException
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_45" style="display: none;">
<div class="QuestionText">What is the return value of doubleClick function?</div>
<ol class="MCAnswers">
<li id="Q_45_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_45_0_Btn"  onclick="CheckMCAnswer(45,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;null
</li>
<li id="Q_45_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_45_1_Btn"  onclick="CheckMCAnswer(45,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;int
</li>
<li id="Q_45_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_45_2_Btn"  onclick="CheckMCAnswer(45,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;void
</li>
<li id="Q_45_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_45_3_Btn"  onclick="CheckMCAnswer(45,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_46" style="display: none;">
<div class="QuestionText">Which of the following stores information about configuration items?</div>
<ol class="MCAnswers">
<li id="Q_46_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_46_0_Btn"  onclick="CheckMCAnswer(46,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Capability Management Database
</li>
<li id="Q_46_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_46_1_Btn"  onclick="CheckMCAnswer(46,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Availability Management Database
</li>
<li id="Q_46_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_46_2_Btn"  onclick="CheckMCAnswer(46,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Configuration Management Database
</li>
<li id="Q_46_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_46_3_Btn"  onclick="CheckMCAnswer(46,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;The Asset Tracking database
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_47" style="display: none;">
<div class="QuestionText">Which hub diagnostic message reason is due to hub was unable to foward to the node because of memory errors/node stability issues?</div>
<ol class="MCAnswers">
<li id="Q_47_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_47_0_Btn"  onclick="CheckMCAnswer(47,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;FAILED_FORWARDING_TO_NODE
</li>
<li id="Q_47_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_47_1_Btn"  onclick="CheckMCAnswer(47,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;STOPPED_FORWARDING_TO_NODE
</li>
<li id="Q_47_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_47_2_Btn"  onclick="CheckMCAnswer(47,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;FORWARDING_TO_NODE_FAILED
</li>
<li id="Q_47_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_47_3_Btn"  onclick="CheckMCAnswer(47,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;FORWARDING_TO_NODE_STOPPED
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_48" style="display: none;">
<div class="QuestionText">What is the file extension of firefox plugins supported earlier by firefox on windows?</div>
<ol class="MCAnswers">
<li id="Q_48_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_48_0_Btn"  onclick="CheckMCAnswer(48,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;exe
</li>
<li id="Q_48_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_48_1_Btn"  onclick="CheckMCAnswer(48,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;dll
</li>
<li id="Q_48_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_48_2_Btn"  onclick="CheckMCAnswer(48,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_48_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_48_3_Btn"  onclick="CheckMCAnswer(48,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;com
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_49" style="display: none;">
<div class="QuestionText">What function does a UI map provides for UI elements of an application?</div>
<ol class="MCAnswers">
<li id="Q_49_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_49_0_Btn"  onclick="CheckMCAnswer(49,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;serving ui elements
</li>
<li id="Q_49_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_49_1_Btn"  onclick="CheckMCAnswer(49,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;defining ui elements
</li>
<li id="Q_49_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_49_2_Btn"  onclick="CheckMCAnswer(49,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all of these
</li>
<li id="Q_49_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_49_3_Btn"  onclick="CheckMCAnswer(49,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;storing ui elements
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_50" style="display: none;">
<div class="QuestionText">Where are the custom extension used to extend Selenium listed in Commands dropdown of Selenium IDE?</div>
<ol class="MCAnswers">
<li id="Q_50_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_50_0_Btn"  onclick="CheckMCAnswer(50,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;view
</li>
<li id="Q_50_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_50_1_Btn"  onclick="CheckMCAnswer(50,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;action
</li>
<li id="Q_50_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_50_2_Btn"  onclick="CheckMCAnswer(50,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;edit
</li>
<li id="Q_50_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_50_3_Btn"  onclick="CheckMCAnswer(50,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;options
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_51" style="display: none;">
<div class="QuestionText">Which of the following selenium tool is a JavaScript based automation engine or sandbox and needs to comply with the same-origin policy?</div>
<ol class="MCAnswers">
<li id="Q_51_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_51_0_Btn"  onclick="CheckMCAnswer(51,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium Grid
</li>
<li id="Q_51_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_51_1_Btn"  onclick="CheckMCAnswer(51,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_51_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_51_2_Btn"  onclick="CheckMCAnswer(51,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium 2
</li>
<li id="Q_51_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_51_3_Btn"  onclick="CheckMCAnswer(51,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Selenium RC
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_52" style="display: none;">
<div class="QuestionText">For which of the following web elements is the click function applicable in Selenium WebDriver?</div>
<ol class="MCAnswers">
<li id="Q_52_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_52_0_Btn"  onclick="CheckMCAnswer(52,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;text box
</li>
<li id="Q_52_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_52_1_Btn"  onclick="CheckMCAnswer(52,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;radio button
</li>
<li id="Q_52_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_52_2_Btn"  onclick="CheckMCAnswer(52,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;drop down
</li>
<li id="Q_52_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_52_3_Btn"  onclick="CheckMCAnswer(52,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_53" style="display: none;">
<div class="QuestionText">Which of the following can be overriden?</div>
<ol class="MCAnswers">
<li id="Q_53_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_53_0_Btn"  onclick="CheckMCAnswer(53,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Both ExplicitWait and click
</li>
<li id="Q_53_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_53_1_Btn"  onclick="CheckMCAnswer(53,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;ExplicitWait
</li>
<li id="Q_53_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_53_2_Btn"  onclick="CheckMCAnswer(53,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;depends upon AUT
</li>
<li id="Q_53_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_53_3_Btn"  onclick="CheckMCAnswer(53,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;click
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_54" style="display: none;">
<div class="QuestionText">Which of the following verification function for custom accessor will be valid and used to extend Selenium but with custom accessor name as ValueFromCompoundTable?</div>
<ol class="MCAnswers">
<li id="Q_54_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_54_0_Btn"  onclick="CheckMCAnswer(54,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;assertValueFromCompoundTable
</li>
<li id="Q_54_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_54_1_Btn"  onclick="CheckMCAnswer(54,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;VerifyValueFromCompoundTable
</li>
<li id="Q_54_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_54_2_Btn"  onclick="CheckMCAnswer(54,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;doverifyValueFromCompoundTable
</li>
<li id="Q_54_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_54_3_Btn"  onclick="CheckMCAnswer(54,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;AssertValueFromCompoundTable
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_55" style="display: none;">
<div class="QuestionText">Select the prefix applied for all accessors registered in selenium object prototype</div>
<ol class="MCAnswers">
<li id="Q_55_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_55_0_Btn"  onclick="CheckMCAnswer(55,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;have
</li>
<li id="Q_55_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_55_1_Btn"  onclick="CheckMCAnswer(55,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;get
</li>
<li id="Q_55_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_55_2_Btn"  onclick="CheckMCAnswer(55,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;put
</li>
<li id="Q_55_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_55_3_Btn"  onclick="CheckMCAnswer(55,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;let
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_56" style="display: none;">
<div class="QuestionText">Which type of software testing tests a specific function within an application, requiring some type of user input and returning some type of result</div>
<ol class="MCAnswers">
<li id="Q_56_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_56_0_Btn"  onclick="CheckMCAnswer(56,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Dynamic
</li>
<li id="Q_56_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_56_1_Btn"  onclick="CheckMCAnswer(56,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Function
</li>
<li id="Q_56_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_56_2_Btn"  onclick="CheckMCAnswer(56,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;AJAX
</li>
<li id="Q_56_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_56_3_Btn"  onclick="CheckMCAnswer(56,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Static
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_57" style="display: none;">
<div class="QuestionText">Which of the following can serve as infrastructure for Selenium Grid</div>
<ol class="MCAnswers">
<li id="Q_57_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_57_0_Btn"  onclick="CheckMCAnswer(57,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;IaaS by Amazon EC2
</li>
<li id="Q_57_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_57_1_Btn"  onclick="CheckMCAnswer(57,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Company owned Data center
</li>
<li id="Q_57_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_57_2_Btn"  onclick="CheckMCAnswer(57,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
<li id="Q_57_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_57_3_Btn"  onclick="CheckMCAnswer(57,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;IaaS by Google Compute
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_58" style="display: none;">
<div class="QuestionText">How many arguments are needed by addCookie function?</div>
<ol class="MCAnswers">
<li id="Q_58_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_58_0_Btn"  onclick="CheckMCAnswer(58,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;3
</li>
<li id="Q_58_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_58_1_Btn"  onclick="CheckMCAnswer(58,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;4
</li>
<li id="Q_58_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_58_2_Btn"  onclick="CheckMCAnswer(58,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;1
</li>
<li id="Q_58_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_58_3_Btn"  onclick="CheckMCAnswer(58,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_59" style="display: none;">
<div class="QuestionText">Which exception is thrown when an alert is not yet on the screen?</div>
<ol class="MCAnswers">
<li id="Q_59_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_59_0_Btn"  onclick="CheckMCAnswer(59,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;NoAlertException
</li>
<li id="Q_59_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_59_1_Btn"  onclick="CheckMCAnswer(59,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;NoAlertPresentException
</li>
<li id="Q_59_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_59_2_Btn"  onclick="CheckMCAnswer(59,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;AlertPresentException
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_60" style="display: none;">
<div class="QuestionText">Which character is prefix to the command line arguments to pass to the firefox binary by moz:firefoxOptions capability of geckodriver?</div>
<ol class="MCAnswers">
<li id="Q_60_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_60_0_Btn"  onclick="CheckMCAnswer(60,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;--
</li>
<li id="Q_60_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_60_1_Btn"  onclick="CheckMCAnswer(60,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;-
</li>
<li id="Q_60_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_60_2_Btn"  onclick="CheckMCAnswer(60,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;/
</li>
<li id="Q_60_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_60_3_Btn"  onclick="CheckMCAnswer(60,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;+
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_61" style="display: none;">
<div class="QuestionText">Select the maximum number of parameters which can be passed to the keyDown function.</div>
<ol class="MCAnswers">
<li id="Q_61_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_61_0_Btn"  onclick="CheckMCAnswer(61,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2
</li>
<li id="Q_61_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_61_1_Btn"  onclick="CheckMCAnswer(61,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;1
</li>
<li id="Q_61_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_61_2_Btn"  onclick="CheckMCAnswer(61,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;4
</li>
<li id="Q_61_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_61_3_Btn"  onclick="CheckMCAnswer(61,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;3
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_62" style="display: none;">
<div class="QuestionText">What is the correct syntax to instanciate an Internet Explorer browser session?</div>
<ol class="MCAnswers">
<li id="Q_62_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_62_0_Btn"  onclick="CheckMCAnswer(62,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver driver = new InternetExplorerDriver();
</li>
<li id="Q_62_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_62_1_Btn"  onclick="CheckMCAnswer(62,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver driver = new edgeDriver();
</li>
<li id="Q_62_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_62_2_Btn"  onclick="CheckMCAnswer(62,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver driver = new EdgeDriver();
</li>
<li id="Q_62_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_62_3_Btn"  onclick="CheckMCAnswer(62,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;WebDriver driver = new Edge();
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_63" style="display: none;">
<div class="QuestionText">What is the first parameter of a custom accessor which is used to extend Selenium?</div>
<ol class="MCAnswers">
<li id="Q_63_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_63_0_Btn"  onclick="CheckMCAnswer(63,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;value field in test case
</li>
<li id="Q_63_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_63_1_Btn"  onclick="CheckMCAnswer(63,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;target element
</li>
<li id="Q_63_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_63_2_Btn"  onclick="CheckMCAnswer(63,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_63_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_63_3_Btn"  onclick="CheckMCAnswer(63,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;error message to display
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_64" style="display: none;">
<div class="QuestionText">Which of the following command will restart Jenkins server?</div>
<ol class="MCAnswers">
<li id="Q_64_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_64_0_Btn"  onclick="CheckMCAnswer(64,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;http://<jenkins_IP>/restart
</li>
<li id="Q_64_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_64_1_Btn"  onclick="CheckMCAnswer(64,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;http://<jenkins_IP>/reboot
</li>
<li id="Q_64_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_64_2_Btn"  onclick="CheckMCAnswer(64,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;http://<jenkins_IP>/?action=restart
</li>
<li id="Q_64_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_64_3_Btn"  onclick="CheckMCAnswer(64,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;http://<jenkins_IP>/?action=reboot
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_65" style="display: none;">
<div class="QuestionText">What is the main benefit of Selenium Grid?</div>
<ol class="MCAnswers">
<li id="Q_65_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_65_0_Btn"  onclick="CheckMCAnswer(65,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Manage multiple environments from a central point, making it easy to run tests against a large combination of browsers and operating system
</li>
<li id="Q_65_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_65_1_Btn"  onclick="CheckMCAnswer(65,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Scale by distributing tests on several machines using parallel execution
</li>
<li id="Q_65_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_65_2_Btn"  onclick="CheckMCAnswer(65,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Minimize the maintenance time for the grid by allowing you to implement custom hooks to leverage a virtual infrastructure of registered nodes.
</li>
<li id="Q_65_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_65_3_Btn"  onclick="CheckMCAnswer(65,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_66" style="display: none;">
<div class="QuestionText">What is the default value of time in seconds before the hub automatically releases a node that hasn't received any requests for more than the specified number of seconds?</div>
<ol class="MCAnswers">
<li id="Q_66_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_66_0_Btn"  onclick="CheckMCAnswer(66,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;3 seconds
</li>
<li id="Q_66_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_66_1_Btn"  onclick="CheckMCAnswer(66,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;30 seconds
</li>
<li id="Q_66_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_66_2_Btn"  onclick="CheckMCAnswer(66,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;300 seconds
</li>
<li id="Q_66_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_66_3_Btn"  onclick="CheckMCAnswer(66,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;3000 seconds
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_67" style="display: none;">
<div class="QuestionText">Which exception is used to indicate that a command used by the remote webdriver is unsupported?</div>
<ol class="MCAnswers">
<li id="Q_67_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_67_0_Btn"  onclick="CheckMCAnswer(67,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;RemoteCommandException
</li>
<li id="Q_67_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_67_1_Btn"  onclick="CheckMCAnswer(67,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;CommandException
</li>
<li id="Q_67_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_67_2_Btn"  onclick="CheckMCAnswer(67,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;UnsupportedCommandException
</li>
<li id="Q_67_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_67_3_Btn"  onclick="CheckMCAnswer(67,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;UnsupportedRemoteCommandException
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_68" style="display: none;">
<div class="QuestionText">Which Selenium webdriver's method is equivalent to setting the named cookie's expiry date to some time in the past?</div>
<ol class="MCAnswers">
<li id="Q_68_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_68_0_Btn"  onclick="CheckMCAnswer(68,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;deleteCookieNamed
</li>
<li id="Q_68_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_68_1_Btn"  onclick="CheckMCAnswer(68,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
<li id="Q_68_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_68_2_Btn"  onclick="CheckMCAnswer(68,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;deleteAllCookies
</li>
<li id="Q_68_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_68_3_Btn"  onclick="CheckMCAnswer(68,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;deleteCookie
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_69" style="display: none;">
<div class="QuestionText">What are the advantages of test automation?</div>
<ol class="MCAnswers">
<li id="Q_69_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_69_0_Btn"  onclick="CheckMCAnswer(69,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Support for Agile and extreme development methodologies
</li>
<li id="Q_69_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_69_1_Btn"  onclick="CheckMCAnswer(69,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Disciplined documentation of test cases
</li>
<li id="Q_69_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_69_2_Btn"  onclick="CheckMCAnswer(69,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Customized defect reporting
</li>
<li id="Q_69_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_69_3_Btn"  onclick="CheckMCAnswer(69,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;All of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_70" style="display: none;">
<div class="QuestionText">Which WebDriver log level is considered the lowest log level?</div>
<ol class="MCAnswers">
<li id="Q_70_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_70_0_Btn"  onclick="CheckMCAnswer(70,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all
</li>
<li id="Q_70_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_70_1_Btn"  onclick="CheckMCAnswer(70,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;warning
</li>
<li id="Q_70_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_70_2_Btn"  onclick="CheckMCAnswer(70,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;debug
</li>
<li id="Q_70_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_70_3_Btn"  onclick="CheckMCAnswer(70,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;info
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_71" style="display: none;">
<div class="QuestionText">Which of the following should be used to move to a web element using javascript</div>
<ol class="MCAnswers">
<li id="Q_71_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_71_0_Btn"  onclick="CheckMCAnswer(71,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;moveToElement
</li>
<li id="Q_71_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_71_1_Btn"  onclick="CheckMCAnswer(71,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;executeScript
</li>
<li id="Q_71_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_71_2_Btn"  onclick="CheckMCAnswer(71,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Depends upon AUT
</li>
<li id="Q_71_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_71_3_Btn"  onclick="CheckMCAnswer(71,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Depends upon visibility
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_72" style="display: none;">
<div class="QuestionText">Which Selenium webdriver's method is the equivalent of calling "document.cookie" and parsing the result?</div>
<ol class="MCAnswers">
<li id="Q_72_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_72_0_Btn"  onclick="CheckMCAnswer(72,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookieNamed
</li>
<li id="Q_72_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_72_1_Btn"  onclick="CheckMCAnswer(72,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
<li id="Q_72_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_72_2_Btn"  onclick="CheckMCAnswer(72,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookie
</li>
<li id="Q_72_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_72_3_Btn"  onclick="CheckMCAnswer(72,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;getCookies
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_73" style="display: none;">
<div class="QuestionText">What is the default timeout for Selenium grid?</div>
<ol class="MCAnswers">
<li id="Q_73_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_73_0_Btn"  onclick="CheckMCAnswer(73,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;300 seconds
</li>
<li id="Q_73_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_73_1_Btn"  onclick="CheckMCAnswer(73,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;100 seconds
</li>
<li id="Q_73_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_73_2_Btn"  onclick="CheckMCAnswer(73,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;200 seconds
</li>
<li id="Q_73_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_73_3_Btn"  onclick="CheckMCAnswer(73,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;500 seconds
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_74" style="display: none;">
<div class="QuestionText">Which of the following cannot be extended in Selenium?</div>
<ol class="MCAnswers">
<li id="Q_74_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_74_0_Btn"  onclick="CheckMCAnswer(74,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Locator
</li>
<li id="Q_74_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_74_1_Btn"  onclick="CheckMCAnswer(74,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Action
</li>
<li id="Q_74_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_74_2_Btn"  onclick="CheckMCAnswer(74,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Accessor
</li>
<li id="Q_74_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_74_3_Btn"  onclick="CheckMCAnswer(74,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;None of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_75" style="display: none;">
<div class="QuestionText">What is the main benefit of logging?</div>
<ol class="MCAnswers">
<li id="Q_75_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_75_0_Btn"  onclick="CheckMCAnswer(75,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;all of these
</li>
<li id="Q_75_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_75_1_Btn"  onclick="CheckMCAnswer(75,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;easier debugging
</li>
<li id="Q_75_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_75_2_Btn"  onclick="CheckMCAnswer(75,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;visibility into code helps manage complexity
</li>
<li id="Q_75_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_75_3_Btn"  onclick="CheckMCAnswer(75,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;it allows developers to see exactly what code is doing
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_76" style="display: none;">
<div class="QuestionText">Which year were Selenium and WebDriver merged?</div>
<ol class="MCAnswers">
<li id="Q_76_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_76_0_Btn"  onclick="CheckMCAnswer(76,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2008
</li>
<li id="Q_76_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_76_1_Btn"  onclick="CheckMCAnswer(76,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2002
</li>
<li id="Q_76_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_76_2_Btn"  onclick="CheckMCAnswer(76,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2004
</li>
<li id="Q_76_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_76_3_Btn"  onclick="CheckMCAnswer(76,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;2006
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_77" style="display: none;">
<div class="QuestionText">Which of the following is usually used for installing Selenium for Java project</div>
<ol class="MCAnswers">
<li id="Q_77_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_77_0_Btn"  onclick="CheckMCAnswer(77,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Apache Maven
</li>
<li id="Q_77_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_77_1_Btn"  onclick="CheckMCAnswer(77,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Spring Framework
</li>
<li id="Q_77_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_77_2_Btn"  onclick="CheckMCAnswer(77,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Hibernate
</li>
<li id="Q_77_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_77_3_Btn"  onclick="CheckMCAnswer(77,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Apache Tomcat
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_78" style="display: none;">
<div class="QuestionText">What is the data type of value returned by getValue function?</div>
<ol class="MCAnswers">
<li id="Q_78_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_78_0_Btn"  onclick="CheckMCAnswer(78,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;String
</li>
<li id="Q_78_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_78_1_Btn"  onclick="CheckMCAnswer(78,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;boolean
</li>
<li id="Q_78_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_78_2_Btn"  onclick="CheckMCAnswer(78,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;char
</li>
<li id="Q_78_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_78_3_Btn"  onclick="CheckMCAnswer(78,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;none of these
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_79" style="display: none;">
<div class="QuestionText">What is the direction of movement of cursor, if the xOffSet parameter of moveByOffset is a positive number?</div>
<ol class="MCAnswers">
<li id="Q_79_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_79_0_Btn"  onclick="CheckMCAnswer(79,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;move to left of window
</li>
<li id="Q_79_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_79_1_Btn"  onclick="CheckMCAnswer(79,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;move to right of window
</li>
<li id="Q_79_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_79_2_Btn"  onclick="CheckMCAnswer(79,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;no change
</li>
<li id="Q_79_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_79_3_Btn"  onclick="CheckMCAnswer(79,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;depends upon AUT
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_80" style="display: none;">
<div class="QuestionText">Which annotation in JUnit 5 is using to configure the test instance lifecycle for the annotated test class?</div>
<ol class="MCAnswers">
<li id="Q_80_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_80_0_Btn"  onclick="CheckMCAnswer(80,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;Test
</li>
<li id="Q_80_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_80_1_Btn"  onclick="CheckMCAnswer(80,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;ParameterizedTest
</li>
<li id="Q_80_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_80_2_Btn"  onclick="CheckMCAnswer(80,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;TestInstance
</li>
<li id="Q_80_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_80_3_Btn"  onclick="CheckMCAnswer(80,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;TestFactory
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_81" style="display: none;">
<div class="QuestionText">Select the valid CSS selector for locating the image tag in the HTML <div id="child"><img src="./logo.png"/></div></div>
<ol class="MCAnswers">
<li id="Q_81_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_81_0_Btn"  onclick="CheckMCAnswer(81,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;css="div#child img"
</li>
<li id="Q_81_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_81_1_Btn"  onclick="CheckMCAnswer(81,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;css="div.child img"
</li>
<li id="Q_81_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_81_2_Btn"  onclick="CheckMCAnswer(81,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;css="div^child img"
</li>
<li id="Q_81_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_81_3_Btn"  onclick="CheckMCAnswer(81,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;css="div$child img"
</li>
</ol>
</li>
<li class="QuizQuestion" id="Q_82" style="display: none;">
<div class="QuestionText">What is the minimum recommended browserTimeout so as to be higher than the socket lock timeout?</div>
<ol class="MCAnswers">
<li id="Q_82_0">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_82_0_Btn"  onclick="CheckMCAnswer(82,0,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;15 seconds
</li>
<li id="Q_82_1">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_82_1_Btn"  onclick="CheckMCAnswer(82,1,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;45 seconds
</li>
<li id="Q_82_2">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_82_2_Btn"  onclick="CheckMCAnswer(82,2,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;60 seconds
</li>
<li id="Q_82_3">
<button class="FuncButton"  onfocus="FuncBtnOver(this)"  onblur="FuncBtnOut(this)"  onmouseover="FuncBtnOver(this)"  onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)"  onmouseup="FuncBtnOut(this)"  id="Q_82_3_Btn"  onclick="CheckMCAnswer(82,3,this)">&nbsp;&nbsp;?&nbsp;&nbsp;</button>&nbsp;&nbsp;30 seconds
</li>
</ol>
</li>
</ol>




</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='index.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='nextpage.htm'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>













